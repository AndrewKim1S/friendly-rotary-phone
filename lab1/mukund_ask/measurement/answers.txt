Q2 predicted latency: 161.553 ms
Q2 predicted throughput: 18.0 Mbps

Q3 two pairs predicted latency: 180 ms
Q3 two pairs predicted throughput: 8.0 Mbps per pair
Q3 three pairs predicted latency: 200 ms
Q3 three pairs predicted throughput: 5.33 Mbps per pair

Q3 two pairs actual latency: h7 to h9 - 161.479 ms, h1 to h4 - 161.701 ms
Q3 three pairs actual latency: h8 to h10 - 161.634 ms, h7 to h9 - 161.587 ms, h1 to h4 - 162.047 ms
We predicted latency would increase with more pairs, but it stayed roughly the same, because the links had sufficient bandwidth and the data was likely transmitted across separate frequencies.

Q3 two pairs actual throughput: h7 to h9 - 11.0 Mbps, h1 to h4 - 5.0 Mbps
Q3 two pairs actual throughput: h1 to h4 - 10.0 Mbps, h7 to h9 - 3.0 Mbps, h8 to h10 - 2.0 Mbps
We predicted throughput would be split evenly between each pair, but it seems that the pair that started communicating first (due to delay in typing out the Iperfer command) took a larger share of the throughput.

Q4 predicted latency for h1 to h4: 161.553 ms
Q4 predicted latency for h5 to h6: 40.0 ms
Q4 predicted throughput for h1 to h4: 18.0 Mbps
Q4 predicted throughput for h5 to h6: 23.0 Mbps

Q4 actual latency for h1 to h4: 161.953 ms, for h5 to h6: 42.014 ms
We predicted that the latency would be the sum of the latencies on each link, and this is what the actual RTTs turned out to be. 

Q4 actual throughput for h1 to h4: 17.0 Mbps, for h5 to h6: 17.0 Mbps
We predicted that the throughput for each pair of hosts would be the minimum throughput of the respective links used as measured earlier, but instead the actual throughput was slightly lower than each of those. This is likely because the bandwidth of link 2 is not enough, as it's shared between h1-h4 and h5-h6. 
